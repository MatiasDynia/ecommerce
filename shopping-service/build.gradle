plugins {
    id 'org.springframework.boot' version '2.1.5.RELEASE'
    id "com.avast.gradle.docker-compose" version "0.9.4"
    id 'jacoco'
    id 'java'
}

apply plugin: 'io.spring.dependency-management'

group = 'com.md.ecommerce'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

ext {
    set('springCloudVersion', "Greenwich.SR1")
}

bootJar {
    archiveFileName = 'shopping-service.jar'
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    //Added jar in local to pass travis ci build
    implementation files('../localRepository/com/md/ecommerce/ecommerce-commons/1.0.0/ecommerce-commons-1.0.0.jar')
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-ribbon'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.modelmapper:modelmapper:2.2.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.mapstruct:mapstruct-jdk8:1.2.0.Final'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.2.0.Final'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo:1.50.3'
}

jacocoTestReport {
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ['com/**/entity', 'com/**/*Application.class'])
        }))
    }

    reports {
        xml.enabled true
        html.enabled true
        xml.destination file("${buildDir}/reports/jacoco/report.xml")
    }
}

check.dependsOn jacocoTestReport